"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createApiInstance = void 0;
const axios_1 = __importStar(require("axios"));
const createApiInstance = (action, credentials) => {
    const axiosInstance = axios_1.default.create({
        baseURL: `https://cluster-01.apigratis.com/api/v1/${action}`,
        headers: {
            ...credentials,
            Authorization: `Bearer ${credentials.BearerToken}`,
            'User-Agent': 'APIBRASIL/SDK-JS',
        },
    });
    axios_1.default.interceptors.request.use(config => {
        console.log(config.url);
        return config;
    });
    const request = async (endpoint, data) => {
        var _a, _b;
        try {
            const resp = await axiosInstance.post(endpoint, data).then(resp => resp.data);
            return resp;
        }
        catch (e) {
            console.log(e);
            if (!(0, axios_1.isAxiosError)(e)) {
                return {
                    status: 'error',
                    error: e,
                };
            }
            return {
                status: 'error',
                error: ((_b = (_a = e === null || e === void 0 ? void 0 : e.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) || e.message,
            };
        }
    };
    return {
        request,
    };
};
exports.createApiInstance = createApiInstance;
